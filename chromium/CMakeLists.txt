cmake_minimum_required(VERSION 3.8)

project(chromium_sandbox C CXX)

set(CHROMIUM_BASE_SRCS
  "allocator/allocator_check.cc"
  "allocator/allocator_check.h"
  #"allocator/allocator_extension.cc"
  #"allocator/allocator_extension.h"
  "allocator/allocator_interception_mac.h"
  "allocator/allocator_interception_mac.mm"
  "allocator/allocator_shim.h"
  "allocator/malloc_zone_functions_mac.cc"
  "allocator/malloc_zone_functions_mac.h"
  "android/animation_frame_time_histogram.cc"
  "android/animation_frame_time_histogram.h"
  "android/apk_assets.cc"
  "android/apk_assets.h"
  "android/application_status_listener.cc"
  "android/application_status_listener.h"
  "android/base_jni_onload.cc"
  "android/base_jni_onload.h"
  "android/base_jni_registrar.cc"
  "android/base_jni_registrar.h"
  "android/build_info.cc"
  "android/build_info.h"
  "android/callback_android.cc"
  "android/callback_android.h"
  "android/command_line_android.cc"
  "android/command_line_android.h"
  "android/content_uri_utils.cc"
  "android/content_uri_utils.h"
  "android/context_utils.cc"
  "android/context_utils.h"
  "android/cpu_features.cc"
  "android/cpu_features.h"
  "android/cxa_demangle_stub.cc"
  "android/early_trace_event_binding.cc"
  "android/early_trace_event_binding.h"
  "android/event_log.cc"
  "android/event_log.h"
  "android/field_trial_list.cc"
  "android/field_trial_list.h"
  "android/important_file_writer_android.cc"
  "android/important_file_writer_android.h"
  "android/java_exception_reporter.cc"
  "android/java_exception_reporter.h"
  "android/java_handler_thread.cc"
  "android/java_handler_thread.h"
  "android/java_message_handler_factory.h"
  "android/java_runtime.cc"
  "android/java_runtime.h"
  "android/jni_android.cc"
  "android/jni_android.h"
  "android/jni_array.cc"
  "android/jni_array.h"
  "android/jni_generator/jni_generator_helper.h"
  "android/jni_int_wrapper.h"
  "android/jni_registrar.cc"
  "android/jni_registrar.h"
  "android/jni_string.cc"
  "android/jni_string.h"
  "android/jni_utils.cc"
  "android/jni_utils.h"
  "android/jni_weak_ref.cc"
  "android/jni_weak_ref.h"
  "android/library_loader/library_load_from_apk_status_codes.h"
  "android/library_loader/library_loader_hooks.cc"
  "android/library_loader/library_loader_hooks.h"
  "android/library_loader/library_prefetcher.cc"
  "android/library_loader/library_prefetcher.h"
  "android/locale_utils.cc"
  "android/locale_utils.h"
  "android/memory_pressure_listener_android.cc"
  "android/memory_pressure_listener_android.h"
  "android/path_service_android.cc"
  "android/path_service_android.h"
  "android/path_utils.cc"
  "android/path_utils.h"
  "android/record_histogram.cc"
  "android/record_histogram.h"
  "android/record_user_action.cc"
  "android/record_user_action.h"
  "android/scoped_java_ref.cc"
  "android/scoped_java_ref.h"
  "android/statistics_recorder_android.cc"
  "android/statistics_recorder_android.h"
  "android/sys_utils.cc"
  "android/sys_utils.h"
  "android/throw_uncaught_exception.cc"
  "android/throw_uncaught_exception.h"
  "android/time_utils.cc"
  "android/time_utils.h"
  "android/trace_event_binding.cc"
  "android/trace_event_binding.h"
  "android/unguessable_token_android.cc"
  "android/unguessable_token_android.h"
  "at_exit.cc"
  "at_exit.h"
  "atomic_ref_count.h"
  "atomic_sequence_num.h"
  "atomicops.h"
  "atomicops_internals_atomicword_compat.h"
  "atomicops_internals_portable.h"
  "atomicops_internals_x86_msvc.h"
  "auto_reset.h"
  "barrier_closure.cc"
  "barrier_closure.h"
  #"base64.cc"
  #"base64.h"
  #"base64url.cc"
  #"base64url.h"
  "base_export.h"
  "base_switches.h"
  "big_endian.cc"
  "big_endian.h"
  "bind.h"
  "bind_helpers.cc"
  "bind_helpers.h"
  "bind_internal.h"
  "bit_cast.h"
  "bits.h"
  "build_time.cc"
  "build_time.h"
  "callback.h"
  "callback_forward.h"
  "callback_helpers.cc"
  "callback_helpers.h"
  "callback_internal.cc"
  "callback_internal.h"
  "callback_list.h"
  "cancelable_callback.h"
  "command_line.cc"
  "command_line.h"
  "compiler_specific.h"
  "containers/adapters.h"
  "containers/flat_set.h"
  "containers/hash_tables.h"
  "containers/linked_list.h"
  "containers/mru_cache.h"
  "containers/small_map.h"
  "containers/stack_container.h"
  "cpu.cc"
  "cpu.h"
  "critical_closure.h"
  #"critical_closure_internal_ios.mm"

  "base_paths.cc"
  "base_paths.h"
  "base_paths_android.cc"
  "base_paths_android.h"
  "base_paths_mac.h"
  "base_paths_mac.mm"
  "base_paths_posix.cc"
  "base_paths_posix.h"
  "base_paths_win.cc"
  "base_paths_win.h"

  # This file depends on files from the "debug/allocator" target
  # but this target does not depend on "debug/allocator".
  "debug/activity_analyzer.cc"
  "debug/activity_analyzer.h"
  "debug/activity_tracker.cc"
  "debug/activity_tracker.h"
  "debug/alias.cc"
  "debug/alias.h"
  "debug/asan_invalid_access.cc"
  "debug/asan_invalid_access.h"
  "debug/close_handle_hook_win.cc"
  "debug/close_handle_hook_win.h"
  "debug/crash_logging.cc"
  "debug/crash_logging.h"
  "debug/debugger.cc"
  "debug/debugger.h"
  "debug/debugger_posix.cc"
  "debug/debugger_win.cc"
  "debug/dump_without_crashing.cc"
  "debug/dump_without_crashing.h"
  "debug/gdi_debug_util_win.cc"
  "debug/gdi_debug_util_win.h"
  "debug/leak_annotations.h"
  "debug/leak_tracker.h"
  "debug/proc_maps_linux.cc"
  "debug/proc_maps_linux.h"
  "debug/profiler.cc"
  "debug/profiler.h"
  "debug/stack_trace.cc"
  "debug/stack_trace.h"
  "debug/stack_trace_android.cc"
  "debug/stack_trace_posix.cc"
  "debug/stack_trace_win.cc"
  "debug/task_annotator.cc"
  "debug/task_annotator.h"
  "debug/thread_heap_usage_tracker.cc"
  "debug/thread_heap_usage_tracker.h"
  "deferred_sequenced_task_runner.cc"
  "deferred_sequenced_task_runner.h"
  "environment.cc"
  "environment.h"
  "event_types.h"
  "feature_list.cc"
  "feature_list.h"
  "file_descriptor_posix.h"
  "file_descriptor_store.cc"
  "file_descriptor_store.h"
  "file_version_info.h"
  "file_version_info_mac.h"
  "file_version_info_mac.mm"
  "file_version_info_win.cc"
  "file_version_info_win.h"
  "files/dir_reader_fallback.h"
  "files/dir_reader_linux.h"
  "files/dir_reader_posix.h"
  "files/file.cc"
  "files/file.h"
  "files/file_descriptor_watcher_posix.cc"
  "files/file_descriptor_watcher_posix.h"
  "files/file_enumerator.cc"
  "files/file_enumerator.h"
  "files/file_enumerator_posix.cc"
  "files/file_enumerator_win.cc"
  "files/file_path.cc"
  "files/file_path.h"
  "files/file_path_constants.cc"
  "files/file_path_watcher.cc"
  "files/file_path_watcher.h"
  "files/file_path_watcher_fsevents.cc"
  "files/file_path_watcher_fsevents.h"
  "files/file_path_watcher_kqueue.cc"
  "files/file_path_watcher_kqueue.h"
  "files/file_path_watcher_linux.cc"
  "files/file_path_watcher_mac.cc"
  "files/file_path_watcher_win.cc"
  "files/file_posix.cc"
  "files/file_proxy.cc"
  "files/file_proxy.h"
  "files/file_tracing.cc"
  "files/file_tracing.h"
  "files/file_util.cc"
  "files/file_util.h"
  "files/file_util_android.cc"
  "files/file_util_linux.cc"
  "files/file_util_mac.mm"
  "files/file_util_posix.cc"
  "files/file_util_proxy.cc"
  "files/file_util_proxy.h"
  "files/file_util_win.cc"
  "files/file_win.cc"
  "files/important_file_writer.cc"
  "files/important_file_writer.h"
  "files/memory_mapped_file.cc"
  "files/memory_mapped_file.h"
  "files/memory_mapped_file_posix.cc"
  "files/memory_mapped_file_win.cc"
  "files/scoped_file.cc"
  "files/scoped_file.h"
  "files/scoped_platform_handle.cc"
  "files/scoped_platform_handle.h"
  "files/scoped_platform_handle_posix.cc"
  "files/scoped_platform_handle_win.cc"
  "files/scoped_temp_dir.cc"
  "files/scoped_temp_dir.h"
  "format_macros.h"
  "gtest_prod_util.h"
  "guid.cc"
  "guid.h"
  "hash.cc"
  "hash.h"
  "id_map.h"
  "ios/block_types.h"
  "ios/crb_protocol_observers.h"
  "ios/crb_protocol_observers.mm"
  "ios/device_util.h"
  "ios/device_util.mm"
  "ios/ios_util.h"
  "ios/ios_util.mm"
  "ios/ns_error_util.h"
  "ios/ns_error_util.mm"
  "ios/scoped_critical_action.h"
  "ios/scoped_critical_action.mm"
  "ios/weak_nsobject.h"
  "ios/weak_nsobject.mm"
  "json/json_file_value_serializer.cc"
  "json/json_file_value_serializer.h"
  "json/json_parser.cc"
  "json/json_parser.h"
  "json/json_reader.cc"
  "json/json_reader.h"
  "json/json_string_value_serializer.cc"
  "json/json_string_value_serializer.h"
  "json/json_value_converter.cc"
  "json/json_value_converter.h"
  "json/json_writer.cc"
  "json/json_writer.h"
  "json/string_escape.cc"
  "json/string_escape.h"
  "lazy_instance.cc"
  "lazy_instance.h"
  "linux_util.cc"
  "linux_util.h"
  "location.cc"
  "location.h"
  "logging.cc"
  "logging.h"
  "logging_win.cc"
  "logging_win.h"
  "mac/authorization_util.h"
  "mac/authorization_util.mm"
  "mac/bind_objc_block.h"
  "mac/bundle_locations.h"
  "mac/bundle_locations.mm"
  "mac/call_with_eh_frame.cc"
  "mac/call_with_eh_frame.h"
  "mac/call_with_eh_frame_asm.S"
  "mac/close_nocancel.cc"
  "mac/cocoa_protocols.h"
  "mac/dispatch_source_mach.cc"
  "mac/dispatch_source_mach.h"
  "mac/foundation_util.h"
  "mac/foundation_util.mm"
  "mac/launch_services_util.h"
  "mac/launch_services_util.mm"
  "mac/launchd.cc"
  "mac/launchd.h"
  "mac/mac_logging.h"
  "mac/mac_logging.mm"
  "mac/mac_util.h"
  "mac/mac_util.mm"
  "mac/mach_logging.cc"
  "mac/mach_logging.h"
  "mac/mach_port_broker.h"
  "mac/mach_port_broker.mm"
  "mac/mach_port_util.cc"
  "mac/mach_port_util.h"
  "mac/objc_property_releaser.h"
  "mac/objc_property_releaser.mm"
  "mac/objc_release_properties.h"
  "mac/objc_release_properties.mm"
  "mac/os_crash_dumps.cc"
  "mac/os_crash_dumps.h"
  "mac/scoped_aedesc.h"
  "mac/scoped_authorizationref.h"
  "mac/scoped_block.h"
  "mac/scoped_cftyperef.h"
  "mac/scoped_dispatch_object.h"
  "mac/scoped_ionotificationportref.h"
  "mac/scoped_ioobject.h"
  "mac/scoped_ioplugininterface.h"
  "mac/scoped_launch_data.h"
  "mac/scoped_mach_port.cc"
  "mac/scoped_mach_port.h"
  "mac/scoped_mach_vm.cc"
  "mac/scoped_mach_vm.h"
  "mac/scoped_nsautorelease_pool.h"
  "mac/scoped_nsautorelease_pool.mm"
  "mac/scoped_nsobject.h"
  "mac/scoped_nsobject.mm"
  "mac/scoped_objc_class_swizzler.h"
  "mac/scoped_objc_class_swizzler.mm"
  "mac/scoped_sending_event.h"
  "mac/scoped_sending_event.mm"
  "mac/sdk_forward_declarations.h"
  "mac/sdk_forward_declarations.mm"
  "macros.h"
  "md5.cc"
  "md5.h"
  "memory/aligned_memory.cc"
  "memory/aligned_memory.h"
  "memory/discardable_memory.cc"
  "memory/discardable_memory.h"
  "memory/discardable_memory_allocator.cc"
  "memory/discardable_memory_allocator.h"
  "memory/discardable_shared_memory.cc"
  "memory/discardable_shared_memory.h"
  "memory/free_deleter.h"
  "memory/linked_ptr.h"
  "memory/manual_constructor.h"
  "memory/memory_coordinator_client.cc"
  "memory/memory_coordinator_client.h"
  "memory/memory_coordinator_client_registry.cc"
  "memory/memory_coordinator_client_registry.h"
  "memory/memory_coordinator_proxy.cc"
  "memory/memory_coordinator_proxy.h"
  "memory/memory_pressure_listener.cc"
  "memory/memory_pressure_listener.h"
  "memory/memory_pressure_monitor.cc"
  "memory/memory_pressure_monitor.h"
  "memory/memory_pressure_monitor_chromeos.cc"
  "memory/memory_pressure_monitor_chromeos.h"
  "memory/memory_pressure_monitor_mac.cc"
  "memory/memory_pressure_monitor_mac.h"
  "memory/memory_pressure_monitor_win.cc"
  "memory/memory_pressure_monitor_win.h"
  "memory/ptr_util.h"
  "memory/raw_scoped_refptr_mismatch_checker.h"
  "memory/ref_counted.cc"
  "memory/ref_counted.h"
  "memory/ref_counted_delete_on_sequence.h"
  "memory/ref_counted_memory.cc"
  "memory/ref_counted_memory.h"
  "memory/scoped_policy.h"
  "memory/scoped_vector.h"
  "memory/shared_memory.h"
  "memory/shared_memory_android.cc"
  "memory/shared_memory_handle.h"
  "memory/shared_memory_handle_mac.cc"
  "memory/shared_memory_handle_win.cc"
  "memory/shared_memory_helper.cc"
  "memory/shared_memory_helper.h"
  "memory/shared_memory_mac.cc"
  "memory/shared_memory_nacl.cc"
  "memory/shared_memory_posix.cc"
  "memory/shared_memory_win.cc"
  "memory/singleton.cc"
  "memory/singleton.h"
  "memory/weak_ptr.cc"
  "memory/weak_ptr.h"
  "message_loop/incoming_task_queue.cc"
  "message_loop/incoming_task_queue.h"
  "message_loop/message_loop.cc"
  "message_loop/message_loop.h"
  "message_loop/message_loop_task_runner.cc"
  "message_loop/message_loop_task_runner.h"
  "message_loop/message_pump.cc"
  "message_loop/message_pump.h"
  "message_loop/message_pump_android.cc"
  "message_loop/message_pump_android.h"
  "message_loop/message_pump_default.cc"
  "message_loop/message_pump_default.h"
  #"message_loop/message_pump_glib.cc"
  #"message_loop/message_pump_glib.h"
  "message_loop/message_pump_io_ios.cc"
  "message_loop/message_pump_io_ios.h"
  "message_loop/message_pump_libevent.cc"
  "message_loop/message_pump_libevent.h"
  "message_loop/message_pump_mac.h"
  "message_loop/message_pump_mac.mm"
  "message_loop/message_pump_win.cc"
  "message_loop/message_pump_win.h"
  "message_loop/timer_slack.h"
  "metrics/bucket_ranges.cc"
  "metrics/bucket_ranges.h"
  "metrics/field_trial.cc"
  "metrics/field_trial.h"
  "metrics/field_trial_param_associator.cc"
  "metrics/field_trial_param_associator.h"
  "metrics/field_trial_params.cc"
  "metrics/field_trial_params.h"
  "metrics/histogram.cc"
  "metrics/histogram.h"
  "metrics/histogram_base.cc"
  "metrics/histogram_base.h"
  "metrics/histogram_delta_serialization.cc"
  "metrics/histogram_delta_serialization.h"
  "metrics/histogram_flattener.h"
  "metrics/histogram_functions.cc"
  "metrics/histogram_functions.h"
  "metrics/histogram_macros.h"
  "metrics/histogram_macros_internal.h"
  "metrics/histogram_macros_local.h"
  "metrics/histogram_samples.cc"
  "metrics/histogram_samples.h"
  "metrics/histogram_snapshot_manager.cc"
  "metrics/histogram_snapshot_manager.h"
  "metrics/metrics_hashes.cc"
  "metrics/metrics_hashes.h"
  "metrics/persistent_histogram_allocator.cc"
  "metrics/persistent_histogram_allocator.h"
  "metrics/persistent_memory_allocator.cc"
  "metrics/persistent_memory_allocator.h"
  "metrics/persistent_sample_map.cc"
  "metrics/persistent_sample_map.h"
  "metrics/sample_map.cc"
  "metrics/sample_map.h"
  "metrics/sample_vector.cc"
  "metrics/sample_vector.h"
  "metrics/sparse_histogram.cc"
  "metrics/sparse_histogram.h"
  "metrics/statistics_recorder.cc"
  "metrics/statistics_recorder.h"
  "metrics/user_metrics.cc"
  "metrics/user_metrics.h"
  "metrics/user_metrics_action.h"
  "native_library.cc"
  "native_library.h"
  "native_library_ios.mm"
  "native_library_mac.mm"
  "native_library_posix.cc"
  "native_library_win.cc"
  "nix/mime_util_xdg.cc"
  "nix/mime_util_xdg.h"
  "nix/xdg_util.cc"
  "nix/xdg_util.h"
  "numerics/safe_conversions.h"
  "numerics/safe_conversions_impl.h"
  "numerics/safe_math.h"
  "numerics/safe_math_impl.h"
  "numerics/saturated_arithmetic.h"
  "numerics/saturated_arithmetic_arm.h"
  "observer_list.h"
  "observer_list_threadsafe.h"
  "optional.h"
  "os_compat_android.cc"
  "os_compat_android.h"
  "os_compat_nacl.cc"
  "os_compat_nacl.h"
  "path_service.cc"
  "path_service.h"
  "pending_task.cc"
  "pending_task.h"
  "pickle.cc"
  "pickle.h"
  "posix/eintr_wrapper.h"
  "posix/file_descriptor_shuffle.cc"
  "posix/file_descriptor_shuffle.h"
  "posix/global_descriptors.cc"
  "posix/global_descriptors.h"
  "posix/safe_strerror.cc"
  "posix/safe_strerror.h"
  "posix/unix_domain_socket_linux.cc"
  "posix/unix_domain_socket_linux.h"
  "post_task_and_reply_with_result_internal.h"
  "power_monitor/power_monitor.cc"
  "power_monitor/power_monitor.h"
  "power_monitor/power_monitor_device_source.cc"
  "power_monitor/power_monitor_device_source.h"
  "power_monitor/power_monitor_source.cc"
  "power_monitor/power_monitor_source.h"
  "power_monitor/power_observer.h"
  "process/internal_linux.cc"
  "process/internal_linux.h"
  "process/kill.cc"
  "process/kill.h"
  "process/kill_mac.cc"
  "process/kill_posix.cc"
  "process/kill_win.cc"
  "process/launch.cc"
  "process/launch.h"
  "process/launch_ios.cc"
  "process/launch_mac.cc"
  "process/launch_posix.cc"
  "process/launch_win.cc"
  "process/memory.cc"
  "process/memory.h"
  "process/memory_linux.cc"
  "process/memory_mac.mm"
  "process/memory_win.cc"
  "process/port_provider_mac.cc"
  "process/port_provider_mac.h"
  "process/process.h"
  "process/process_handle.cc"
  "process/process_handle.h"

  #"process/process_handle_freebsd.cc"  # Unused in Chromium build.
  "process/process_handle_linux.cc"
  "process/process_handle_mac.cc"

  #"process/process_handle_openbsd.cc"  # Unused in Chromium build.
  "process/process_handle_posix.cc"
  "process/process_handle_win.cc"
  "process/process_info.h"
  "process/process_info_linux.cc"
  "process/process_info_mac.cc"
  "process/process_info_win.cc"
  "process/process_iterator.cc"
  "process/process_iterator.h"

  #"process/process_iterator_freebsd.cc"  # Unused in Chromium build.
  "process/process_iterator_linux.cc"
  "process/process_iterator_mac.cc"

  #"process/process_iterator_openbsd.cc"  # Unused in Chromium build.
  "process/process_iterator_win.cc"
  "process/process_linux.cc"
  "process/process_mac.cc"
  "process/process_metrics.cc"
  "process/process_metrics.h"

  #"process/process_metrics_freebsd.cc"  # Unused in Chromium build.
  "process/process_metrics_ios.cc"
  "process/process_metrics_linux.cc"
  "process/process_metrics_mac.cc"

  #"process/process_metrics_openbsd.cc"  # Unused in Chromium build.
  "process/process_metrics_posix.cc"
  "process/process_metrics_win.cc"
  "process/process_posix.cc"
  "process/process_win.cc"
  "profiler/native_stack_sampler.cc"
  "profiler/native_stack_sampler.h"
  "profiler/native_stack_sampler_posix.cc"
  "profiler/native_stack_sampler_win.cc"
  "profiler/scoped_profile.cc"
  "profiler/scoped_profile.h"
  "profiler/scoped_tracker.cc"
  "profiler/scoped_tracker.h"
  "profiler/stack_sampling_profiler.cc"
  "profiler/stack_sampling_profiler.h"
  "profiler/tracked_time.cc"
  "profiler/tracked_time.h"
  "rand_util.cc"
  "rand_util.h"
  "rand_util_nacl.cc"
  "rand_util_posix.cc"
  "rand_util_win.cc"
  "run_loop.cc"
  "run_loop.h"
  "scoped_clear_errno.h"
  "scoped_generic.h"
  "scoped_native_library.cc"
  "scoped_native_library.h"
  "scoped_observer.h"
  "sequence_checker.h"
  "sequence_checker_impl.cc"
  "sequence_checker_impl.h"
  "sequence_token.cc"
  "sequence_token.h"
  "sequenced_task_runner.cc"
  "sequenced_task_runner.h"
  "sequenced_task_runner_helpers.h"
  "sha1.cc"
  "sha1.h"
  "single_thread_task_runner.h"
  "stl_util.h"
  "strings/latin1_string_conversions.cc"
  "strings/latin1_string_conversions.h"
  "strings/nullable_string16.cc"
  "strings/nullable_string16.h"
  "strings/pattern.cc"
  "strings/pattern.h"
  "strings/safe_sprintf.cc"
  "strings/safe_sprintf.h"
  "strings/string16.cc"
  "strings/string16.h"
  "strings/string_number_conversions.cc"
  "strings/string_number_conversions.h"
  "strings/string_piece.cc"
  "strings/string_piece.h"
  "strings/string_split.cc"
  "strings/string_split.h"
  "strings/string_tokenizer.h"
  "strings/string_util.cc"
  "strings/string_util.h"
  "strings/string_util_constants.cc"
  "strings/string_util_posix.h"
  "strings/string_util_win.h"
  "strings/stringize_macros.h"
  "strings/stringprintf.cc"
  "strings/stringprintf.h"
  "strings/sys_string_conversions.h"
  "strings/sys_string_conversions_mac.mm"
  "strings/sys_string_conversions_posix.cc"
  "strings/sys_string_conversions_win.cc"
  "strings/utf_offset_string_conversions.cc"
  "strings/utf_offset_string_conversions.h"
  "strings/utf_string_conversion_utils.cc"
  "strings/utf_string_conversion_utils.h"
  "strings/utf_string_conversions.cc"
  "strings/utf_string_conversions.h"
  "supports_user_data.cc"
  "supports_user_data.h"
  "sync_socket.h"
  "sync_socket_posix.cc"
  "sync_socket_win.cc"
  "synchronization/atomic_flag.cc"
  "synchronization/atomic_flag.h"
  "synchronization/cancellation_flag.h"
  "synchronization/condition_variable.h"
  "synchronization/condition_variable_posix.cc"
  "synchronization/condition_variable_win.cc"
  "synchronization/lock.cc"
  "synchronization/lock.h"
  "synchronization/lock_impl.h"
  "synchronization/lock_impl_posix.cc"
  "synchronization/lock_impl_win.cc"
  "synchronization/read_write_lock.h"
  "synchronization/read_write_lock_nacl.cc"
  "synchronization/read_write_lock_posix.cc"
  "synchronization/read_write_lock_win.cc"
  "synchronization/spin_wait.h"
  "synchronization/waitable_event.h"
  "synchronization/waitable_event_posix.cc"
  "synchronization/waitable_event_watcher.h"
  "synchronization/waitable_event_watcher_posix.cc"
  "synchronization/waitable_event_watcher_win.cc"
  "synchronization/waitable_event_win.cc"
  "sys_byteorder.h"
  "sys_info.cc"
  "sys_info.h"
  "sys_info_android.cc"
  "sys_info_chromeos.cc"
  "sys_info_internal.h"
  "syslog_logging.cc"
  "syslog_logging.h"

  #"sys_info_freebsd.cc"  # Unused in Chromium build.
  "sys_info_ios.mm"
  "sys_info_linux.cc"
  "sys_info_mac.mm"

  #"sys_info_openbsd.cc"  # Unused in Chromium build.
  "sys_info_posix.cc"
  "sys_info_win.cc"
  "system_monitor/system_monitor.cc"
  "system_monitor/system_monitor.h"
  "task/cancelable_task_tracker.cc"
  "task/cancelable_task_tracker.h"
  "task_runner.cc"
  "task_runner.h"
  "task_runner_util.h"
  "task_scheduler/delayed_task_manager.cc"
  "task_scheduler/delayed_task_manager.h"
  "task_scheduler/initialization_util.cc"
  "task_scheduler/initialization_util.h"
  "task_scheduler/post_task.cc"
  "task_scheduler/post_task.h"
  "task_scheduler/priority_queue.cc"
  "task_scheduler/priority_queue.h"
  "task_scheduler/scheduler_lock.h"
  "task_scheduler/scheduler_lock_impl.cc"
  "task_scheduler/scheduler_lock_impl.h"
  "task_scheduler/scheduler_worker.cc"
  "task_scheduler/scheduler_worker.h"
  "task_scheduler/scheduler_worker_pool.h"
  "task_scheduler/scheduler_worker_pool_impl.cc"
  "task_scheduler/scheduler_worker_pool_impl.h"
  "task_scheduler/scheduler_worker_pool_params.cc"
  "task_scheduler/scheduler_worker_pool_params.h"
  "task_scheduler/scheduler_worker_stack.cc"
  "task_scheduler/scheduler_worker_stack.h"
  "task_scheduler/scoped_set_task_priority_for_current_thread.cc"
  "task_scheduler/scoped_set_task_priority_for_current_thread.h"
  "task_scheduler/sequence.cc"
  "task_scheduler/sequence.h"
  "task_scheduler/sequence_sort_key.cc"
  "task_scheduler/sequence_sort_key.h"
  "task_scheduler/task.cc"
  "task_scheduler/task.h"
  "task_scheduler/task_scheduler.cc"
  "task_scheduler/task_scheduler.h"
  "task_scheduler/task_scheduler_impl.cc"
  "task_scheduler/task_scheduler_impl.h"
  "task_scheduler/task_tracker.cc"
  "task_scheduler/task_tracker.h"
  "task_scheduler/task_tracker_posix.cc"
  "task_scheduler/task_tracker_posix.h"
  "task_scheduler/task_traits.cc"
  "task_scheduler/task_traits.h"
  "template_util.h"
  "test/malloc_wrapper.h"
  "third_party/dmg_fp/dmg_fp.h"
  "third_party/dmg_fp/dtoa_wrapper.cc"
  "third_party/dmg_fp/g_fmt.cc"
  "third_party/icu/icu_utf.cc"
  "third_party/icu/icu_utf.h"
  "third_party/nspr/prtime.cc"
  "third_party/nspr/prtime.h"
  "third_party/superfasthash/superfasthash.c"
  "third_party/valgrind/memcheck.h"
  "threading/non_thread_safe.h"
  "threading/non_thread_safe_impl.cc"
  "threading/non_thread_safe_impl.h"
  "threading/platform_thread.h"
  "threading/platform_thread_android.cc"
  "threading/platform_thread_internal_posix.cc"
  "threading/platform_thread_internal_posix.h"
  "threading/platform_thread_linux.cc"
  "threading/platform_thread_mac.mm"
  "threading/platform_thread_posix.cc"
  "threading/platform_thread_win.cc"
  "threading/post_task_and_reply_impl.cc"
  "threading/post_task_and_reply_impl.h"
  "threading/sequenced_task_runner_handle.cc"
  "threading/sequenced_task_runner_handle.h"
  "threading/sequenced_worker_pool.cc"
  "threading/sequenced_worker_pool.h"
  "threading/simple_thread.cc"
  "threading/simple_thread.h"
  "threading/thread.cc"
  "threading/thread.h"
  "threading/thread_checker.h"
  "threading/thread_checker_impl.cc"
  "threading/thread_checker_impl.h"
  "threading/thread_collision_warner.cc"
  "threading/thread_collision_warner.h"
  "threading/thread_id_name_manager.cc"
  "threading/thread_id_name_manager.h"
  "threading/thread_local.h"
  "threading/thread_local_storage.cc"
  "threading/thread_local_storage.h"
  "threading/thread_local_storage_posix.cc"
  "threading/thread_local_storage_win.cc"
  "threading/thread_restrictions.cc"
  "threading/thread_restrictions.h"
  "threading/thread_task_runner_handle.cc"
  "threading/thread_task_runner_handle.h"
  "threading/watchdog.cc"
  "threading/watchdog.h"
  "threading/worker_pool.cc"
  "threading/worker_pool.h"
  "threading/worker_pool_posix.cc"
  "threading/worker_pool_posix.h"
  "threading/worker_pool_win.cc"
  "time/clock.cc"
  "time/clock.h"
  "time/default_clock.cc"
  "time/default_clock.h"
  "time/default_tick_clock.cc"
  "time/default_tick_clock.h"
  "time/tick_clock.cc"
  "time/tick_clock.h"
  "time/time.cc"
  "time/time.h"
  "time/time_mac.cc"
  "time/time_posix.cc"
  "time/time_win.cc"
  "timer/elapsed_timer.cc"
  "timer/elapsed_timer.h"
  "timer/hi_res_timer_manager.h"
  "timer/hi_res_timer_manager_posix.cc"
  "timer/hi_res_timer_manager_win.cc"
  "timer/mock_timer.cc"
  "timer/mock_timer.h"
  "timer/timer.cc"
  "timer/timer.h"
  "trace_event/auto_open_close_event.cc"
  "trace_event/auto_open_close_event.h"
  "trace_event/blame_context.cc"
  "trace_event/blame_context.h"
  "trace_event/category_registry.cc"
  "trace_event/category_registry.h"
  "trace_event/common/trace_event_common.h"
  "trace_event/event_name_filter.cc"
  "trace_event/event_name_filter.h"
  "trace_event/heap_profiler.h"
  "trace_event/heap_profiler_allocation_context.cc"
  "trace_event/heap_profiler_allocation_context.h"
  "trace_event/heap_profiler_allocation_context_tracker.cc"
  "trace_event/heap_profiler_allocation_context_tracker.h"
  "trace_event/heap_profiler_allocation_register.cc"
  "trace_event/heap_profiler_allocation_register.h"
  "trace_event/heap_profiler_allocation_register_posix.cc"
  "trace_event/heap_profiler_allocation_register_win.cc"
  "trace_event/heap_profiler_event_filter.cc"
  "trace_event/heap_profiler_event_filter.h"
  "trace_event/heap_profiler_heap_dump_writer.cc"
  "trace_event/heap_profiler_heap_dump_writer.h"
  "trace_event/heap_profiler_stack_frame_deduplicator.cc"
  "trace_event/heap_profiler_stack_frame_deduplicator.h"
  "trace_event/heap_profiler_type_name_deduplicator.cc"
  "trace_event/heap_profiler_type_name_deduplicator.h"
  "trace_event/java_heap_dump_provider_android.cc"
  "trace_event/java_heap_dump_provider_android.h"
  "trace_event/malloc_dump_provider.cc"
  "trace_event/malloc_dump_provider.h"
  "trace_event/memory_allocator_dump.cc"
  "trace_event/memory_allocator_dump.h"
  "trace_event/memory_allocator_dump_guid.cc"
  "trace_event/memory_allocator_dump_guid.h"
  "trace_event/memory_dump_manager.cc"
  "trace_event/memory_dump_manager.h"
  "trace_event/memory_dump_provider.h"
  "trace_event/memory_dump_request_args.cc"
  "trace_event/memory_dump_request_args.h"
  "trace_event/memory_dump_scheduler.cc"
  "trace_event/memory_dump_scheduler.h"
  "trace_event/memory_dump_session_state.cc"
  "trace_event/memory_dump_session_state.h"
  "trace_event/memory_infra_background_whitelist.cc"
  "trace_event/memory_infra_background_whitelist.h"
  "trace_event/memory_usage_estimator.cc"
  "trace_event/memory_usage_estimator.h"
  "trace_event/process_memory_dump.cc"
  "trace_event/process_memory_dump.h"
  "trace_event/process_memory_maps.cc"
  "trace_event/process_memory_maps.h"
  "trace_event/process_memory_totals.cc"
  "trace_event/process_memory_totals.h"
  "trace_event/trace_buffer.cc"
  "trace_event/trace_buffer.h"
  "trace_event/trace_category.h"
  "trace_event/trace_config.cc"
  "trace_event/trace_config.h"
  "trace_event/trace_event.h"
  "trace_event/trace_event_android.cc"
  "trace_event/trace_event_argument.cc"
  "trace_event/trace_event_argument.h"
  "trace_event/trace_event_etw_export_win.cc"
  "trace_event/trace_event_etw_export_win.h"
  "trace_event/trace_event_filter.cc"
  "trace_event/trace_event_filter.h"
  "trace_event/trace_event_impl.cc"
  "trace_event/trace_event_impl.h"
  "trace_event/trace_event_memory_overhead.cc"
  "trace_event/trace_event_memory_overhead.h"
  "trace_event/trace_event_synthetic_delay.cc"
  "trace_event/trace_event_synthetic_delay.h"
  "trace_event/trace_event_system_stats_monitor.cc"
  "trace_event/trace_event_system_stats_monitor.h"
  "trace_event/trace_log.cc"
  "trace_event/trace_log.h"
  "trace_event/trace_log_constants.cc"
  "trace_event/tracing_agent.cc"
  "trace_event/tracing_agent.h"
  "tracked_objects.cc"
  "tracked_objects.h"
  "tracking_info.cc"
  "tracking_info.h"
  "tuple.h"
  "unguessable_token.cc"
  "unguessable_token.h"
  "value_conversions.cc"
  "value_conversions.h"
  "values.cc"
  "values.h"
  "version.cc"
  "version.h"
  "vlog.cc"
  "vlog.h"
  "win/enum_variant.cc"
  "win/enum_variant.h"
  "win/event_trace_consumer.h"
  "win/event_trace_controller.cc"
  "win/event_trace_controller.h"
  "win/event_trace_provider.cc"
  "win/event_trace_provider.h"
  "win/i18n.cc"
  "win/i18n.h"
  "win/iat_patch_function.cc"
  "win/iat_patch_function.h"
  "win/iunknown_impl.cc"
  "win/iunknown_impl.h"
  "win/message_window.cc"
  "win/message_window.h"
  "win/object_watcher.cc"
  "win/object_watcher.h"
  "win/process_startup_helper.cc"
  "win/process_startup_helper.h"
  "win/registry.cc"
  "win/registry.h"
  "win/resource_util.cc"
  "win/resource_util.h"
  "win/scoped_bstr.cc"
  "win/scoped_bstr.h"
  "win/scoped_co_mem.h"
  "win/scoped_com_initializer.h"
  "win/scoped_comptr.h"
  "win/scoped_gdi_object.h"
  "win/scoped_handle.cc"
  "win/scoped_handle.h"
  "win/scoped_hdc.h"
  "win/scoped_hglobal.h"
  "win/scoped_process_information.cc"
  "win/scoped_process_information.h"
  "win/scoped_propvariant.h"
  "win/scoped_select_object.h"
  "win/scoped_variant.cc"
  "win/scoped_variant.h"
  "win/shortcut.cc"
  "win/shortcut.h"
  "win/startup_information.cc"
  "win/startup_information.h"
  "win/wait_chain.cc"
  "win/wait_chain.h"
  "win/win_util.cc"
  "win/win_util.h"
  "win/windows_version.cc"
  "win/windows_version.h"
  "win/wrapped_window_proc.cc"
  "win/wrapped_window_proc.h"

  # This is the subset of files from base that should not be used with a dynamic
  # library. Note that this library cannot depend on base because base depends on
  # base_static.
  "base_switches.cc"
  "base_switches.h"
  "task_scheduler/switches.cc"
  "task_scheduler/switches.h"
  "win/pe_image.cc"
  "win/pe_image.h"

  "third_party/superfasthash/superfasthash.c"
  "third_party/dynamic_annotations/dynamic_annotations.c"
)

if(NOT CMAKE_SYSTEM_NAME MATCHES "Darwin")
  list(REMOVE_ITEM CHROMIUM_BASE_SRCS
    "files/file_path_watcher_fsevents.cc"
    "files/file_path_watcher_fsevents.h"
    "files/file_path_watcher_kqueue.cc"
    "files/file_path_watcher_kqueue.h"
  )
endif()


if(CMAKE_SYSTEM_NAME MATCHES "Windows")
  set(CMAKE_CXX_FLAGS "")
  set(CHROMIUM_DEFS -DUNICODE -D_UNICODE
    -DNOMINMAX -DWIN32_LEAN_AND_MEAN)

  list(APPEND CHROMIUM_DEFS
    -D__STD_C
    -D_CRT_RAND_S
    -D_CRT_SECURE_NO_DEPRECATE
    -D_HAS_EXCEPTIONS=0
    -D_SCL_SECURE_NO_DEPRECATE
  )

  list(APPEND CHROMIUM_DEFS
    -D_ATL_NO_OPENGL
    -D_WINDOWS
    -DCERT_CHAIN_PARA_HAS_EXTRA_FIELDS
    -DPSAPI_VERSION=1
    -DWIN32
    -D_SECURE_ATL
  )

  list(APPEND CHROMIUM_DEFS
    -DNTDDI_VERSION=0x0A000000
    -D_WIN32_WINNT=0x0A00
    -DWINVER=0x0A00
  )

  list(APPEND CHROMIUM_BASE_SRCS
    "power_monitor/power_monitor_device_source_win.cc"
    "profiler/win32_stack_frame_unwinder.cc"
    "profiler/win32_stack_frame_unwinder.h"
  )

  list(REMOVE_ITEM CHROMIUM_BASE_SRCS
    "file_descriptor_store.cc"
    "file_descriptor_store.h"
    "memory/shared_memory_helper.cc"
    "memory/shared_memory_helper.h"
    "message_loop/message_pump_libevent.cc"
    "strings/string16.cc"
  )

  list(APPEND CHROMIUM_SANDBOX_SRCS
    "sandbox/win/src/acl.cc"
    "sandbox/win/src/acl.h"
    "sandbox/win/src/broker_services.cc"
    "sandbox/win/src/broker_services.h"
    "sandbox/win/src/crosscall_client.h"
    "sandbox/win/src/crosscall_params.h"
    "sandbox/win/src/crosscall_server.cc"
    "sandbox/win/src/crosscall_server.h"
    "sandbox/win/src/eat_resolver.cc"
    "sandbox/win/src/eat_resolver.h"
    "sandbox/win/src/filesystem_dispatcher.cc"
    "sandbox/win/src/filesystem_dispatcher.h"
    "sandbox/win/src/filesystem_interception.cc"
    "sandbox/win/src/filesystem_interception.h"
    "sandbox/win/src/filesystem_policy.cc"
    "sandbox/win/src/filesystem_policy.h"
    "sandbox/win/src/handle_closer.cc"
    "sandbox/win/src/handle_closer.h"
    "sandbox/win/src/handle_closer_agent.cc"
    "sandbox/win/src/handle_closer_agent.h"
    "sandbox/win/src/interception.cc"
    "sandbox/win/src/interception.h"
    "sandbox/win/src/interception_agent.cc"
    "sandbox/win/src/interception_agent.h"
    "sandbox/win/src/interception_internal.h"
    "sandbox/win/src/interceptors.h"
    "sandbox/win/src/internal_types.h"
    "sandbox/win/src/ipc_tags.h"
    "sandbox/win/src/job.cc"
    "sandbox/win/src/job.h"
    "sandbox/win/src/named_pipe_dispatcher.cc"
    "sandbox/win/src/named_pipe_dispatcher.h"
    "sandbox/win/src/named_pipe_interception.cc"
    "sandbox/win/src/named_pipe_interception.h"
    "sandbox/win/src/named_pipe_policy.cc"
    "sandbox/win/src/named_pipe_policy.h"
    "sandbox/win/src/nt_internals.h"
    "sandbox/win/src/policy_broker.cc"
    "sandbox/win/src/policy_broker.h"
    "sandbox/win/src/policy_engine_opcodes.cc"
    "sandbox/win/src/policy_engine_opcodes.h"
    "sandbox/win/src/policy_engine_params.h"
    "sandbox/win/src/policy_engine_processor.cc"
    "sandbox/win/src/policy_engine_processor.h"
    "sandbox/win/src/policy_low_level.cc"
    "sandbox/win/src/policy_low_level.h"
    "sandbox/win/src/policy_params.h"
    "sandbox/win/src/policy_target.cc"
    "sandbox/win/src/policy_target.h"
    "sandbox/win/src/process_mitigations.cc"
    "sandbox/win/src/process_mitigations.h"
    "sandbox/win/src/process_mitigations_win32k_dispatcher.cc"
    "sandbox/win/src/process_mitigations_win32k_dispatcher.h"
    "sandbox/win/src/process_mitigations_win32k_interception.cc"
    "sandbox/win/src/process_mitigations_win32k_interception.h"
    "sandbox/win/src/process_mitigations_win32k_policy.cc"
    "sandbox/win/src/process_mitigations_win32k_policy.h"
    "sandbox/win/src/process_thread_dispatcher.cc"
    "sandbox/win/src/process_thread_dispatcher.h"
    "sandbox/win/src/process_thread_interception.cc"
    "sandbox/win/src/process_thread_interception.h"
    "sandbox/win/src/process_thread_policy.cc"
    "sandbox/win/src/process_thread_policy.h"
    "sandbox/win/src/registry_dispatcher.cc"
    "sandbox/win/src/registry_dispatcher.h"
    "sandbox/win/src/registry_interception.cc"
    "sandbox/win/src/registry_interception.h"
    "sandbox/win/src/registry_policy.cc"
    "sandbox/win/src/registry_policy.h"
    "sandbox/win/src/resolver.cc"
    "sandbox/win/src/resolver.h"
    "sandbox/win/src/restricted_token.cc"
    "sandbox/win/src/restricted_token.h"
    "sandbox/win/src/restricted_token_utils.cc"
    "sandbox/win/src/restricted_token_utils.h"
    "sandbox/win/src/sandbox.cc"
    "sandbox/win/src/sandbox.h"
    "sandbox/win/src/sandbox_factory.h"
    "sandbox/win/src/sandbox_globals.cc"
    "sandbox/win/src/sandbox_nt_types.h"
    "sandbox/win/src/sandbox_nt_util.cc"
    "sandbox/win/src/sandbox_nt_util.h"
    "sandbox/win/src/sandbox_policy.h"
    "sandbox/win/src/sandbox_policy_base.cc"
    "sandbox/win/src/sandbox_policy_base.h"
    "sandbox/win/src/sandbox_rand.cc"
    "sandbox/win/src/sandbox_rand.h"
    "sandbox/win/src/sandbox_types.h"
    "sandbox/win/src/sandbox_utils.cc"
    "sandbox/win/src/sandbox_utils.h"
    "sandbox/win/src/security_level.h"
    "sandbox/win/src/service_resolver.cc"
    "sandbox/win/src/service_resolver.h"
    "sandbox/win/src/sharedmem_ipc_client.cc"
    "sandbox/win/src/sharedmem_ipc_client.h"
    "sandbox/win/src/sharedmem_ipc_server.cc"
    "sandbox/win/src/sharedmem_ipc_server.h"
    "sandbox/win/src/sid.cc"
    "sandbox/win/src/sid.h"
    "sandbox/win/src/sync_dispatcher.cc"
    "sandbox/win/src/sync_dispatcher.h"
    "sandbox/win/src/sync_interception.cc"
    "sandbox/win/src/sync_interception.h"
    "sandbox/win/src/sync_policy.cc"
    "sandbox/win/src/sync_policy.h"
    "sandbox/win/src/target_interceptions.cc"
    "sandbox/win/src/target_interceptions.h"
    "sandbox/win/src/target_process.cc"
    "sandbox/win/src/target_process.h"
    "sandbox/win/src/target_services.cc"
    "sandbox/win/src/target_services.h"
    "sandbox/win/src/top_level_dispatcher.cc"
    "sandbox/win/src/top_level_dispatcher.h"
    "sandbox/win/src/win2k_threadpool.cc"
    "sandbox/win/src/win2k_threadpool.h"
    "sandbox/win/src/win_utils.cc"
    "sandbox/win/src/win_utils.h"
    "sandbox/win/src/window.cc"
    "sandbox/win/src/window.h"
  )

  if(CMAKE_SYSTEM_PROCESSOR MATCHES "AMD64")
    list(APPEND CHROMIUM_SANDBOX_SRCS
      "sandbox/win/src/interceptors_64.cc"
      "sandbox/win/src/interceptors_64.h"
      "sandbox/win/src/resolver_64.cc"
      "sandbox/win/src/service_resolver_64.cc"
    )
  elseif(CMAKE_SYSTEM_PROCESSOR MATCHES "x86")
    list(APPEND CHROMIUM_SANDBOX_SRCS
      "sandbox/win/src/resolver_32.cc"
      "sandbox/win/src/service_resolver_32.cc"
      "sandbox/win/src/sidestep/ia32_modrm_map.cpp"
      "sandbox/win/src/sidestep/ia32_opcode_map.cpp"
      "sandbox/win/src/sidestep/mini_disassembler.cpp"
      "sandbox/win/src/sidestep/mini_disassembler.h"
      "sandbox/win/src/sidestep/mini_disassembler_types.h"
      "sandbox/win/src/sidestep/preamble_patcher.h"
      "sandbox/win/src/sidestep/preamble_patcher_with_stub.cpp"
      "sandbox/win/src/sidestep_resolver.cc"
      "sandbox/win/src/sidestep_resolver.h"
    )
  endif()
elseif(CMAKE_SYSTEM_NAME MATCHES "Linux")
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -stdlib=libc++")
  set(CMAKE_CXX_LINK_FLAGS "${CMAKE_CXX_LINK_FLAGS} -stdlib=libc++ -lpthread")

  set(CHROMIUM_LIBEVENT_SRCS
    "buffer.c"
    "evbuffer.c"
    "evdns.c"
    "evdns.h"
    "event-config.h"
    "event-internal.h"
    "event.c"
    "event.h"
    "event_tagging.c"
    "evhttp.h"
    "evrpc-internal.h"
    "evrpc.c"
    "evrpc.h"
    "evsignal.h"
    "evutil.c"
    "evutil.h"
    "http-internal.h"
    "http.c"
    "log.c"
    "log.h"
    "min_heap.h"
    "poll.c"
    "select.c"
    "signal.c"
    "strlcpy-internal.h"
    "strlcpy.c"

    "epoll.c"
    "linux/config.h"
    "linux/event-config.h"
  )
  set(CHROMIUM_LIBEVENT_SRCS_TEMP ${CHROMIUM_LIBEVENT_SRCS})
  set(CHROMIUM_LIBEVENT_SRCS "")
  foreach(LIBEVENT_SRC IN LISTS CHROMIUM_LIBEVENT_SRCS_TEMP)
    list(APPEND CHROMIUM_LIBEVENT_SRCS "base/third_party/libevent/${LIBEVENT_SRC}")
  endforeach(LIBEVENT_SRC)
  add_library(chromium_libevent ${CHROMIUM_LIBEVENT_SRCS})
  target_include_directories(chromium_libevent PRIVATE 
    "base/third_party/libevent"
    "base/third_party/libevent/linux"
  )
  target_compile_definitions(chromium_libevent PRIVATE HAVE_CONFIG_H=1)

  list(APPEND CHROMIUM_SANDBOX_SRCS
    "sandbox/linux/services/init_process_reaper.cc"
    "sandbox/linux/services/init_process_reaper.h"
    "sandbox/linux/services/proc_util.cc"
    "sandbox/linux/services/proc_util.h"
    "sandbox/linux/services/resource_limits.cc"
    "sandbox/linux/services/resource_limits.h"
    "sandbox/linux/services/scoped_process.cc"
    "sandbox/linux/services/scoped_process.h"
    "sandbox/linux/services/syscall_wrappers.cc"
    "sandbox/linux/services/syscall_wrappers.h"
    "sandbox/linux/services/thread_helpers.cc"
    "sandbox/linux/services/thread_helpers.h"
    "sandbox/linux/services/yama.cc"
    "sandbox/linux/services/yama.h"
    "sandbox/linux/syscall_broker/broker_channel.cc"
    "sandbox/linux/syscall_broker/broker_channel.h"
    "sandbox/linux/syscall_broker/broker_client.cc"
    "sandbox/linux/syscall_broker/broker_client.h"
    "sandbox/linux/syscall_broker/broker_common.h"
    "sandbox/linux/syscall_broker/broker_file_permission.cc"
    "sandbox/linux/syscall_broker/broker_file_permission.h"
    "sandbox/linux/syscall_broker/broker_host.cc"
    "sandbox/linux/syscall_broker/broker_host.h"
    "sandbox/linux/syscall_broker/broker_policy.cc"
    "sandbox/linux/syscall_broker/broker_policy.h"
    "sandbox/linux/syscall_broker/broker_process.cc"
    "sandbox/linux/syscall_broker/broker_process.h"

    "sandbox/linux/services/credentials.cc"
    "sandbox/linux/services/credentials.h"
    "sandbox/linux/services/namespace_sandbox.cc"
    "sandbox/linux/services/namespace_sandbox.h"
    "sandbox/linux/services/namespace_utils.cc"
    "sandbox/linux/services/namespace_utils.h"
  )
endif(CMAKE_SYSTEM_NAME MATCHES "Windows")

foreach(BASE_SRC IN LISTS CHROMIUM_BASE_SRCS)
  set(should_compile 0)
  if(BASE_SRC MATCHES "^win/" OR BASE_SRC MATCHES "_win\.[^\.]+$")
    if(CMAKE_SYSTEM_NAME MATCHES "Windows")
      set(should_compile 1)
    endif()
  elseif(BASE_SRC MATCHES "^linux" OR BASE_SRC MATCHES "_linux\.[^\.]+$")
    if(CMAKE_SYSTEM_NAME MATCHES "Linux")
      set(should_compile 1)
    endif()
  elseif(BASE_SRC MATCHES "^nix" OR BASE_SRC MATCHES "_nix\.[^\.]+$")
    if(CMAKE_SYSTEM_NAME MATCHES "Linux")
      set(should_compile 1)
    endif()
  elseif(BASE_SRC MATCHES "^posix/" OR BASE_SRC MATCHES "_posix\.[^\.]+$")
    if(CMAKE_SYSTEM_NAME MATCHES "Linux")
      set(should_compile 1)
    endif()
  elseif(BASE_SRC MATCHES "^android/" OR BASE_SRC MATCHES "_android\.[^\.]+$")
  elseif(BASE_SRC MATCHES "^ios/" OR BASE_SRC MATCHES "_ios\.[^\.]+$")
  elseif(BASE_SRC MATCHES "^mac/" OR BASE_SRC MATCHES "_mac\.[^\.]+$")
  elseif(BASE_SRC MATCHES "^chromeos/" OR BASE_SRC MATCHES "_chromeos\.[^\.]+$")
  elseif(BASE_SRC MATCHES "^nacl/" OR BASE_SRC MATCHES "_nacl\.[^\.]+$")
  else()
    set(should_compile 1)
  endif()

  if(should_compile)
    list(APPEND CHROMIUM_SANDBOX_SRCS "base/${BASE_SRC}")
  endif(should_compile)
endforeach(BASE_SRC)

include_directories(${PROJECT_SOURCE_DIR} ${PROJECT_SOURCE_DIR}/../chromium_config)
set(CMAKE_CXX_STANDARD 11)

add_library(chromium_sandbox
  ${CHROMIUM_SANDBOX_SRCS}
)
target_compile_definitions(chromium_sandbox PUBLIC NO_TCMALLOC=1)
target_compile_definitions(chromium_sandbox PUBLIC ${CHROMIUM_DEFS})

if(CMAKE_SYSTEM_NAME MATCHES "Linux")
  target_link_libraries(chromium_sandbox chromium_libevent)
endif()

if(CMAKE_SYSTEM_NAME MATCHES "Windows")
  # Generate message headers
  add_custom_command(OUTPUT
    ${PROJECT_SOURCE_DIR}/../chromium_config/base/trace_event/etw_manifest/chrome_events_win.h
    COMMAND mc.exe -u -um -h ${PROJECT_SOURCE_DIR}/../chromium_config/base/trace_event/etw_manifest
      ${PROJECT_SOURCE_DIR}/base/trace_event/etw_manifest/chrome_events_win.man
  )
  target_sources(chromium_sandbox PRIVATE
    ${PROJECT_SOURCE_DIR}/../chromium_config/base/trace_event/etw_manifest/chrome_events_win.h) 

  target_link_libraries(chromium_sandbox dbghelp winmm mincore)
endif()
